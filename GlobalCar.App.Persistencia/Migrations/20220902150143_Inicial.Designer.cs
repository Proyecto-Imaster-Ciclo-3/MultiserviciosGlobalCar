// <auto-generated />
using System;
using GlobalCar.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GlobalCar.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220902150143_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GlobalCar.App.Dominio.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlacaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlacaId");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Tarea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.ServicioEspecialista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DocumentoEspecialistaId")
                        .HasColumnType("int");

                    b.Property<int?>("HistorialId")
                        .HasColumnType("int");

                    b.Property<int?>("IdServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoEspecialistaId");

                    b.HasIndex("HistorialId");

                    b.HasIndex("IdServicioId");

                    b.ToTable("ServicioEspecialistas");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Membresia")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocClienteId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("GlobalCar.App.Dominio.Persona");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Especialista", b =>
                {
                    b.HasBaseType("GlobalCar.App.Dominio.Persona");

                    b.Property<string>("Profesion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Especialista");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Historial", b =>
                {
                    b.HasOne("GlobalCar.App.Dominio.Vehiculo", "Placa")
                        .WithMany()
                        .HasForeignKey("PlacaId");

                    b.Navigation("Placa");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.ServicioEspecialista", b =>
                {
                    b.HasOne("GlobalCar.App.Dominio.Especialista", "DocumentoEspecialista")
                        .WithMany()
                        .HasForeignKey("DocumentoEspecialistaId");

                    b.HasOne("GlobalCar.App.Dominio.Historial", null)
                        .WithMany("TipoServicioEspecialista")
                        .HasForeignKey("HistorialId");

                    b.HasOne("GlobalCar.App.Dominio.Servicio", "IdServicio")
                        .WithMany()
                        .HasForeignKey("IdServicioId");

                    b.Navigation("DocumentoEspecialista");

                    b.Navigation("IdServicio");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("GlobalCar.App.Dominio.Cliente", "DocCliente")
                        .WithMany()
                        .HasForeignKey("DocClienteId");

                    b.Navigation("DocCliente");
                });

            modelBuilder.Entity("GlobalCar.App.Dominio.Historial", b =>
                {
                    b.Navigation("TipoServicioEspecialista");
                });
#pragma warning restore 612, 618
        }
    }
}
